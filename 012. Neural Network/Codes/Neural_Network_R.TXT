# Artificial Neural Networks
setwd("")
getwd()
digits_data = read.csv("digitsdata.csv")

remove_cols = c("target")
x_data = digits_data[,!(names(digits_data) %in% remove_cols)]
y_data = digits_data[,c("target")]


normalize <- function(x) {return((x - min(x)) / (max(x) - min(x)))}


data_norm <- as.data.frame(lapply(x_data, normalize))
data_norm <- replace(data_norm, is.na(data_norm), 0.0)
data_norm_v2 = data.frame(as.factor(y_data),data_norm)
names(data_norm_v2)[1] = "target"


set.seed(123)
numrow = nrow(data_norm_v2)
trnind = sample(1:numrow,size = as.integer(0.7*numrow))
train_data = data_norm_v2[trnind,]
test_data = data_norm_v2[-trnind,]

f <- as.formula(paste("target ~", paste(names(train_data)[!names(train_data) %in% "target"], collapse = " + ")))

library(nnet)
accuracy <- function(mat){return(sum(diag(mat)) / sum(mat))}

nnet_fit = nnet(f,train_data,size=c(9),maxit=200)
y_pred = predict(nnet_fit,newdata = test_data,type = "class")
tble = table(test_data$target,y_pred)
print(accuracy(tble))


#Plotting nnet from the github packages
require(RCurl)
root.url<-'https://gist.githubusercontent.com/fawda123'
raw.fun<-paste(
  root.url,
  '5086859/raw/cc1544804d5027d82b70e74b83b3941cd2184354/nnet_plot_fun.r',
  sep='/')
script<-getURL(raw.fun, ssl.verifypeer = FALSE)
eval(parse(text = script))
rm('script','raw.fun')

# Ploting the neural net
plot(nnet_fit)


# Grid Search - ANN
neurons = c(1,2,3,4,5,6,7,8,9,10,11,12,13)
iters = c(200,300,400,500,600,700,800,900)

initacc = 0

for(itr in iters){
  for(nd in neurons){
    nnet_fit = nnet(f,train_data,size=c(nd),maxit=itr,trace=FALSE)
    y_pred = predict(nnet_fit,newdata = test_data,type = "class")
    tble = table(test_data$target,y_pred)
    acc = accuracy(tble)
    
    if (acc>initacc){
      print(paste("Neurons",nd,"Iterations",itr,"Test accuracy",acc))
      initacc = acc
    }
    
  }
}