train_seg3_KPI_4           <- seg3[1:20,c("KPI_4","Driver_1","KPI_2","Driver_15")]
train_seg3_KPI_41          <- train_seg3_KPI_4
train_seg3_KPI_41[20,c("Driver_1","KPI_2","Driver_15")]      <- c(Slide36,Slide37,Slide38)
train_seg3_KPI_4$log_Driver_1      <- log(train_seg3_KPI_4$Driver_1)
train_seg3_KPI_41$log_Driver_1     <- log(train_seg3_KPI_41$Driver_1)
train_seg3_KPI_4$ma3_KPI_2      <- SMA(train_seg3_KPI_4$KPI_2,3)
train_seg3_KPI_41$ma3_KPI_2     <- SMA(train_seg3_KPI_41$KPI_2,3)
train_seg3_KPI_4                           <- train_seg3_KPI_4[3:20,c("KPI_4","log_Driver_1","ma3_KPI_2","Driver_15")]
train_seg3_KPI_41                          <- train_seg3_KPI_41[3:20,c("KPI_4","log_Driver_1","ma3_KPI_2","Driver_15")]
seg3_KPI_4_fit             <- lm(KPI_4~.,train_seg3_KPI_4)
preds                     <- predict(seg3_KPI_4_fit,seg3_test)
c1                        <- ts(train_seg3_KPI_41[,"log_Driver_1"],frequency = 12,start=c(2014,6))
c2                        <- ts(train_seg3_KPI_41[,"ma3_KPI_2"],frequency = 12,start=c(2014,6))
c3                        <- ts(train_seg3_KPI_41[,"Driver_15"],frequency = 12,start=c(2014,6))
arima_fit1                <- auto.arima(c1,xreg=exogen,D=1)
arima_fit2                <- auto.arima(c2,xreg=exogen,D=1)
arima_fit3                <- auto.arima(c3,xreg=exogen,D=1)
pred1                     <- forecast(arima_fit1,h=12,xreg = c(rep(1,12)))
pred2                     <- forecast(arima_fit2,h=12,xreg = c(rep(1,12)))
pred3                     <- forecast(arima_fit3,h=12,xreg = c(rep(1,12)))
seg3_test1                <- data.frame(pred1$mean,pred2$mean,pred3$mean)
names(seg3_test1)         <- c("log_Driver_1","ma3_KPI_2","Driver_15")
seg3_KPI_4_fit1            <- lm(KPI_4~.,train_seg3_KPI_41)
preds1                    <- predict(seg3_KPI_4_fit1,seg3_test1)
Original_Forecast         <- c(seg3_KPI_4_fit$fitted.values,preds)
Simulated_Forecast        <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,Original_Forecast[18],preds1)
Time                      <- c("May14","Jun14","Jul14","Aug14","Sep14","Oct14","Nov14","Dec14","Jan15","Feb15","Mar15","Apr15","May15","Jun15","Jul15","Aug15","Sep15","Oct15","Nov15","Dec15","Jan16","Feb16","Mar16","Apr16","May16","Jun16","Jul16","Aug16","Sep16","Oct16")
Strline1                  <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,(max(Original_Forecast,na.rm=T)*1.5),NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
Mean_Absolute_Percent_Error                      <- colMeans(data.frame(abs(((seg3$KPI_4[3:20])-(seg3_KPI_4_fit$fitted.values))/(seg3$KPI_4[3:20])) * 100))[[1]]
Mean_Absolute_Percent_Difference                      <- colMeans(data.frame((abs(preds - preds1)/preds)*100))[[1]]
} else if (KPI == 'KPI 5 ') {
Actual                    <- c(seg3$KPI_5[3:20],NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
train_seg3_KPI_5            <- seg3[1:20,c("KPI_5","Driver_21","Driver_18")]
train_seg3_KPI_51           <- train_seg3_KPI_5
train_seg3_KPI_51[20,c("Driver_21","Driver_18")]      <- c(Slide39,Slide40)
train_seg3_KPI_5$log_Driver_21      <- log(train_seg3_KPI_5$Driver_21)
train_seg3_KPI_51$log_Driver_21     <- log(train_seg3_KPI_51$Driver_21)
train_seg3_KPI_5$log_Driver_18      <- log(train_seg3_KPI_5$Driver_18)
train_seg3_KPI_51$log_Driver_18     <- log(train_seg3_KPI_51$Driver_18)
train_seg3_KPI_5                          <- train_seg3_KPI_5[3:20,c("KPI_5","log_Driver_21","log_Driver_18")]
train_seg3_KPI_51                         <- train_seg3_KPI_51[3:20,c("KPI_5","log_Driver_21","log_Driver_18")]
seg3_KPI_5_fit             <- lm(KPI_5~.,train_seg3_KPI_5)
preds                     <- predict(seg3_KPI_5_fit,seg3_test)
c1                        <- ts(train_seg3_KPI_51[,"log_Driver_21"],frequency = 12,start=c(2014,6))
c2                        <- ts(train_seg3_KPI_51[,"log_Driver_18"],frequency = 12,start=c(2014,6))
arima_fit1                <- auto.arima(c1,xreg=exogen,D=1)
arima_fit2                <- auto.arima(c2,xreg=exogen,D=1)
pred1                     <- forecast(arima_fit1,h=12,xreg = c(rep(1,12)))
pred2                     <- forecast(arima_fit2,h=12,xreg = c(rep(1,12)))
seg3_test1                <- data.frame(pred1$mean,pred2$mean)
names(seg3_test1)         <- c("log_Driver_21","log_Driver_18")
seg3_KPI_5_fit1            <- lm(KPI_5~.,train_seg3_KPI_51)
preds1                    <- predict(seg3_KPI_5_fit1,seg3_test1)
Original_Forecast         <- c(seg3_KPI_5_fit$fitted.values,preds)
Simulated_Forecast        <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,Original_Forecast[18],preds1)
Time                      <- c("May14","Jun14","Jul14","Aug14","Sep14","Oct14","Nov14","Dec14","Jan15","Feb15","Mar15","Apr15","May15","Jun15","Jul15","Aug15","Sep15","Oct15","Nov15","Dec15","Jan16","Feb16","Mar16","Apr16","May16","Jun16","Jul16","Aug16","Sep16","Oct16")
Strline1                  <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,(max(Original_Forecast,na.rm=T)*1.5),NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
Mean_Absolute_Percent_Error                      <- colMeans(data.frame(abs(((seg3$KPI_5[3:20])-(seg3_KPI_5_fit$fitted.values))/(seg3$KPI_5[3:20])) * 100))[[1]]
Mean_Absolute_Percent_Difference                      <- colMeans(data.frame((abs(preds - preds1)/preds)*100))[[1]]
}
data                        <- cbind(Time,Strline1,Actual,Original_Forecast,Simulated_Forecast)
data                        <- data.frame(data)
data$Time                   <- as.character(data$Time)
data$Strline1               <- as.numeric(as.character(data$Strline1))
data$Actual                 <- as.numeric(as.character(data$Actual))
data$Original_Forecast      <- as.numeric(as.character(data$Original_Forecast))
data$Simulated_Forecast     <- as.numeric(as.character(data$Simulated_Forecast))
data1                       <- cbind(Mean_Absolute_Percent_Error, Mean_Absolute_Percent_Difference)
data1                       <- data.frame(data1)
data                        <- data.frame(cbind(data,data1))
return(data)
}
## Function for Segment 4
Predicted_Control_Seg4        <- function(KPI,Slide41,Slide42,Slide43,Slide44,Slide45,Slide46,Slide47,Slide48,Slide49,Slide50,Slide51,Slide52,Slide53,Slide54) {
print(KPI)
if (KPI == 'KPI 1 ') {
Actual                    <- c(seg4$KPI_1[3:20],NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
train_seg4_KPI_1            <- seg4[1:20,c("KPI_1","Driver_6","Driver_5","Driver_7")]
train_seg4_KPI_11           <- train_seg4_KPI_1
train_seg4_KPI_11[20,c("Driver_6","Driver_5","Driver_7")]      <- c(Slide41/100,Slide42,Slide43)
train_seg4_KPI_1                          <- train_seg4_KPI_1[3:20,c("KPI_1","Driver_6","Driver_5","Driver_7")]
train_seg4_KPI_11                         <- train_seg4_KPI_11[3:20,c("KPI_1","Driver_6","Driver_5","Driver_7")]
seg4_KPI_1_fit              <- lm(KPI_1~.,train_seg4_KPI_1)
preds                     <- predict(seg4_KPI_1_fit,seg4_test)
c1                        <- ts(train_seg4_KPI_11[,"Driver_6"],frequency = 12,start=c(2014,6))
c2                        <- ts(train_seg4_KPI_11[,"Driver_5"],frequency = 12,start=c(2014,6))
c3                        <- ts(train_seg4_KPI_11[,"Driver_7"],frequency = 12,start=c(2014,6))
arima_fit1                <- auto.arima(c1,xreg=exogen,D=1)
arima_fit2                <- auto.arima(c2,xreg=exogen,D=1)
arima_fit3                <- auto.arima(c3,xreg=exogen,D=1)
pred1                     <- forecast(arima_fit1,h=12,xreg = c(rep(1,12)))
pred2                     <- forecast(arima_fit2,h=12,xreg = c(rep(1,12)))
pred3                     <- forecast(arima_fit3,h=12,xreg = c(rep(1,12)))
seg4_test1                <- data.frame(pred1$mean,pred2$mean,pred3$mean)
names(seg4_test1)         <- c("Driver_6","Driver_5","Driver_7")
seg4_KPI_1_fit1             <- lm(KPI_1~.,train_seg4_KPI_11)
preds1                    <- predict(seg4_KPI_1_fit1,seg4_test1)
Original_Forecast         <- c(seg4_KPI_1_fit$fitted.values,preds)
Simulated_Forecast        <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,Original_Forecast[18],preds1)
Time                      <- c("May14","Jun14","Jul14","Aug14","Sep14","Oct14","Nov14","Dec14","Jan15","Feb15","Mar15","Apr15","May15","Jun15","Jul15","Aug15","Sep15","Oct15","Nov15","Dec15","Jan16","Feb16","Mar16","Apr16","May16","Jun16","Jul16","Aug16","Sep16","Oct16")
Strline1                  <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,(max(Original_Forecast,na.rm=T)*1.5),NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
Mean_Absolute_Percent_Error                      <- colMeans(data.frame(abs(((seg4$KPI_1[3:20])-(seg4_KPI_1_fit$fitted.values))/(seg4$KPI_1[3:20])) * 100))[[1]]
Mean_Absolute_Percent_Difference                      <- colMeans(data.frame((abs(preds - preds1)/preds)*100))[[1]]
}  else if (KPI == 'KPI 2 ') {
Actual                    <- c(seg4$KPI_2[3:20],NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
train_seg4_KPI_2            <- seg4[1:20,c("KPI_2","KPI_1","Driver_13")]
train_seg4_KPI_21           <- train_seg4_KPI_2
train_seg4_KPI_21[20,c("KPI_1","Driver_13")]      <- c(Slide44,Slide45)
train_seg4_KPI_2$ma3_KPI_1      <- SMA(train_seg4_KPI_2$KPI_1,3)
train_seg4_KPI_21$ma3_KPI_1     <- SMA(train_seg4_KPI_21$KPI_1,3)
train_seg4_KPI_2$ma3_Driver_13      <- SMA(train_seg4_KPI_2$Driver_13,3)
train_seg4_KPI_21$ma3_Driver_13     <- SMA(train_seg4_KPI_21$Driver_13,3)
train_seg4_KPI_2                          <- train_seg4_KPI_2[3:20,c("KPI_2","ma3_KPI_1","ma3_Driver_13")]
train_seg4_KPI_21                         <- train_seg4_KPI_21[3:20,c("KPI_2","ma3_KPI_1","ma3_Driver_13")]
seg4_KPI_2_fit              <- lm(KPI_2~.,train_seg4_KPI_2)
preds                     <- predict(seg4_KPI_2_fit,seg4_test)
c1                        <- ts(train_seg4_KPI_21[,"ma3_KPI_1"],frequency = 12,start=c(2014,6))
c2                        <- ts(train_seg4_KPI_21[,"ma3_Driver_13"],frequency = 12,start=c(2014,6))
arima_fit1                <- auto.arima(c1,xreg=exogen,D=1)
arima_fit2                <- auto.arima(c2,xreg=exogen,D=1)
pred1                     <- forecast(arima_fit1,h=12,xreg = c(rep(1,12)))
pred2                     <- forecast(arima_fit2,h=12,xreg = c(rep(1,12)))
seg4_test1                <- data.frame(pred1$mean,pred2$mean)
names(seg4_test1)         <- c("ma3_KPI_1","ma3_Driver_13")
seg4_KPI_2_fit1             <- lm(KPI_2~.,train_seg4_KPI_21)
preds1                    <- predict(seg4_KPI_2_fit1,seg4_test1)
Original_Forecast         <- c(seg4_KPI_2_fit$fitted.values,preds)
Simulated_Forecast        <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,Original_Forecast[18],preds1)
Time                      <- c("May14","Jun14","Jul14","Aug14","Sep14","Oct14","Nov14","Dec14","Jan15","Feb15","Mar15","Apr15","May15","Jun15","Jul15","Aug15","Sep15","Oct15","Nov15","Dec15","Jan16","Feb16","Mar16","Apr16","May16","Jun16","Jul16","Aug16","Sep16","Oct16")
Strline1                  <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,(max(Original_Forecast,na.rm=T)*1.5),NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
Mean_Absolute_Percent_Error                      <- colMeans(data.frame(abs(((seg4$KPI_2[3:20])-(seg4_KPI_2_fit$fitted.values))/(seg4$KPI_2[3:20])) * 100))[[1]]
Mean_Absolute_Percent_Difference                      <- colMeans(data.frame((abs(preds - preds1)/preds)*100))[[1]]
}  else if (KPI == 'KPI 3 ') {
Actual                    <- c(seg4$KPI_3[3:20],NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
train_seg4_KPI_3            <- seg4[1:20,c("KPI_3","Driver_5","Driver_8","KPI_4")]
train_seg4_KPI_31           <- train_seg4_KPI_3
train_seg4_KPI_31[20,c("Driver_5","Driver_8","KPI_4")]      <- c(Slide46,Slide47,Slide48)
train_seg4_KPI_3$log_KPI_4       <- log(train_seg4_KPI_3$KPI_4)
train_seg4_KPI_31$log_KPI_4      <- log(train_seg4_KPI_31$KPI_4)
train_seg4_KPI_3                          <- train_seg4_KPI_3[3:20,c("KPI_3","Driver_5","Driver_8","log_KPI_4")]
train_seg4_KPI_31                         <- train_seg4_KPI_31[3:20,c("KPI_3","Driver_5","Driver_8","log_KPI_4")]
seg4_KPI_3_fit              <- lm(KPI_3~.,train_seg4_KPI_3)
preds                     <- predict(seg4_KPI_3_fit,seg4_test)
c1                        <- ts(train_seg4_KPI_31[,"Driver_5"],frequency = 12,start=c(2014,6))
c2                        <- ts(train_seg4_KPI_31[,"Driver_8"],frequency = 12,start=c(2014,6))
c3                        <- ts(train_seg4_KPI_31[,"log_KPI_4"],frequency = 12,start=c(2014,6))
arima_fit1                <- auto.arima(c1,xreg=exogen,D=1)
arima_fit2                <- auto.arima(c2,xreg=exogen,D=1)
arima_fit3                <- auto.arima(c3,xreg=exogen,D=1)
pred1                     <- forecast(arima_fit1,h=12,xreg = c(rep(1,12)))
pred2                     <- forecast(arima_fit2,h=12,xreg = c(rep(1,12)))
pred3                     <- forecast(arima_fit3,h=12,xreg = c(rep(1,12)))
seg4_test1                <- data.frame(pred1$mean,pred2$mean,pred3$mean)
names(seg4_test1)         <- c("Driver_5","Driver_8","log_KPI_4")
seg4_KPI_3_fit1             <- lm(KPI_3~.,train_seg4_KPI_31)
preds1                    <- predict(seg4_KPI_3_fit1,seg4_test1)
Original_Forecast         <- c(seg4_KPI_3_fit$fitted.values,preds)
Simulated_Forecast        <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,Original_Forecast[18],preds1)
Time                      <- c("May14","Jun14","Jul14","Aug14","Sep14","Oct14","Nov14","Dec14","Jan15","Feb15","Mar15","Apr15","May15","Jun15","Jul15","Aug15","Sep15","Oct15","Nov15","Dec15","Jan16","Feb16","Mar16","Apr16","May16","Jun16","Jul16","Aug16","Sep16","Oct16")
Strline1                  <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,(max(Original_Forecast,na.rm=T)*1.5),NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
Mean_Absolute_Percent_Error                      <- colMeans(data.frame(abs(((seg4$KPI_3[3:20])-(seg4_KPI_3_fit$fitted.values))/(seg4$KPI_3[3:20])) * 100))[[1]]
Mean_Absolute_Percent_Difference                      <- colMeans(data.frame((abs(preds - preds1)/preds)*100))[[1]]
} else if (KPI == 'KPI 4 ') {
Actual                    <- c(seg4$KPI_4[3:20],NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
train_seg4_KPI_4           <- seg4[1:20,c("KPI_4","KPI_3","Driver_16","Driver_10")]
train_seg4_KPI_41          <- train_seg4_KPI_4
train_seg4_KPI_41[20,c("KPI_3","Driver_16","Driver_10")]      <- c(Slide49,Slide50,Slide51/100)
train_seg4_KPI_4$ma3_KPI_3      <- SMA(train_seg4_KPI_4$KPI_3,3)
train_seg4_KPI_41$ma3_KPI_3     <- SMA(train_seg4_KPI_41$KPI_3,3)
train_seg4_KPI_4$ma3_Driver_16      <- SMA(train_seg4_KPI_4$Driver_16,3)
train_seg4_KPI_41$ma3_Driver_16     <- SMA(train_seg4_KPI_41$Driver_16,3)
train_seg4_KPI_4$ma3_Driver_10            <- SMA(train_seg4_KPI_4$Driver_10,3)
train_seg4_KPI_41$ma3_Driver_10           <- SMA(train_seg4_KPI_41$Driver_10,3)
train_seg4_KPI_4                           <- train_seg4_KPI_4[3:20,c("KPI_4","ma3_KPI_3","ma3_Driver_16","ma3_Driver_10")]
train_seg4_KPI_41                          <- train_seg4_KPI_41[3:20,c("KPI_4","ma3_KPI_3","ma3_Driver_16","ma3_Driver_10")]
seg4_KPI_4_fit             <- lm(KPI_4~.,train_seg4_KPI_4)
preds                     <- predict(seg4_KPI_4_fit,seg4_test)
c1                        <- ts(train_seg4_KPI_41[,"ma3_KPI_3"],frequency = 12,start=c(2014,6))
c2                        <- ts(train_seg4_KPI_41[,"ma3_Driver_16"],frequency = 12,start=c(2014,6))
c3                        <- ts(train_seg4_KPI_41[,"ma3_Driver_10"],frequency = 12,start=c(2014,6))
arima_fit1                <- auto.arima(c1,xreg=exogen,D=1)
arima_fit2                <- auto.arima(c2,xreg=exogen,D=1)
arima_fit3                <- auto.arima(c3,xreg=exogen,D=1)
pred1                     <- forecast(arima_fit1,h=12,xreg = c(rep(1,12)))
pred2                     <- forecast(arima_fit2,h=12,xreg = c(rep(1,12)))
pred3                     <- forecast(arima_fit3,h=12,xreg = c(rep(1,12)))
seg4_test1                <- data.frame(pred1$mean,pred2$mean,pred3$mean)
names(seg4_test1)         <- c("ma3_KPI_3","ma3_Driver_16","ma3_Driver_10")
seg4_KPI_4_fit1            <- lm(KPI_4~.,train_seg4_KPI_41)
preds1                    <- predict(seg4_KPI_4_fit1,seg4_test1)
Original_Forecast         <- c(seg4_KPI_4_fit$fitted.values,preds)
Simulated_Forecast        <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,Original_Forecast[18],preds1)
Time                      <- c("May14","Jun14","Jul14","Aug14","Sep14","Oct14","Nov14","Dec14","Jan15","Feb15","Mar15","Apr15","May15","Jun15","Jul15","Aug15","Sep15","Oct15","Nov15","Dec15","Jan16","Feb16","Mar16","Apr16","May16","Jun16","Jul16","Aug16","Sep16","Oct16")
Strline1                  <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,(max(Original_Forecast,na.rm=T)*1.5),NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
Mean_Absolute_Percent_Error                      <- colMeans(data.frame(abs(((seg4$KPI_4[3:20])-(seg4_KPI_4_fit$fitted.values))/(seg4$KPI_4[3:20])) * 100))[[1]]
Mean_Absolute_Percent_Difference                      <- colMeans(data.frame((abs(preds - preds1)/preds)*100))[[1]]
} else if (KPI == 'KPI 5 ') {
Actual                    <- c(seg4$KPI_5[3:20],NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
train_seg4_KPI_5            <- seg4[1:20,c("KPI_5","KPI_1","Driver_4","Driver_15")]
train_seg4_KPI_51           <- train_seg4_KPI_5
train_seg4_KPI_51[20,c("KPI_1","Driver_4","Driver_15")]      <- c(Slide52,Slide53,Slide54)
train_seg4_KPI_5$ma3_KPI_1      <- SMA(train_seg4_KPI_5$KPI_1,3)
train_seg4_KPI_51$ma3_KPI_1     <- SMA(train_seg4_KPI_51$KPI_1,3)
train_seg4_KPI_5$ma3_Driver_4      <- SMA(train_seg4_KPI_5$Driver_4,3)
train_seg4_KPI_51$ma3_Driver_4     <- SMA(train_seg4_KPI_51$Driver_4,3)
train_seg4_KPI_5$ma3_Driver_15    <- SMA(train_seg4_KPI_5$Driver_15,3)
train_seg4_KPI_51$ma3_Driver_15   <- SMA(train_seg4_KPI_51$Driver_15,3)
train_seg4_KPI_5                          <- train_seg4_KPI_5[3:20,c("KPI_5","ma3_KPI_1","ma3_Driver_4","ma3_Driver_15")]
train_seg4_KPI_51                         <- train_seg4_KPI_51[3:20,c("KPI_5","ma3_KPI_1","ma3_Driver_4","ma3_Driver_15")]
seg4_KPI_5_fit             <- lm(KPI_5~.,train_seg4_KPI_5)
preds                     <- predict(seg4_KPI_5_fit,seg4_test)
c1                        <- ts(train_seg4_KPI_51[,"ma3_KPI_1"],frequency = 12,start=c(2014,6))
c2                        <- ts(train_seg4_KPI_51[,"ma3_Driver_4"],frequency = 12,start=c(2014,6))
c3                        <- ts(train_seg4_KPI_51[,"ma3_Driver_15"],frequency = 12,start=c(2014,6))
arima_fit1                <- auto.arima(c1,xreg=exogen,D=1)
arima_fit2                <- auto.arima(c2,xreg=exogen,D=1)
arima_fit3                <- auto.arima(c3,xreg=exogen,D=1)
pred1                     <- forecast(arima_fit1,h=12,xreg = c(rep(1,12)))
pred2                     <- forecast(arima_fit2,h=12,xreg = c(rep(1,12)))
pred3                     <- forecast(arima_fit3,h=12,xreg = c(rep(1,12)))
seg4_test1                <- data.frame(pred1$mean,pred2$mean,pred3$mean)
names(seg4_test1)         <- c("ma3_KPI_1","ma3_Driver_4","ma3_Driver_15")
seg4_KPI_5_fit1            <- lm(KPI_5~.,train_seg4_KPI_51)
preds1                    <- predict(seg4_KPI_5_fit1,seg4_test1)
Original_Forecast         <- c(seg4_KPI_5_fit$fitted.values,preds)
Simulated_Forecast        <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,Original_Forecast[18],preds1)
Time                      <- c("May14","Jun14","Jul14","Aug14","Sep14","Oct14","Nov14","Dec14","Jan15","Feb15","Mar15","Apr15","May15","Jun15","Jul15","Aug15","Sep15","Oct15","Nov15","Dec15","Jan16","Feb16","Mar16","Apr16","May16","Jun16","Jul16","Aug16","Sep16","Oct16")
Strline1                  <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,(max(Original_Forecast,na.rm=T)*1.5),NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
Mean_Absolute_Percent_Error                      <- colMeans(data.frame(abs(((seg4$KPI_5[3:20])-(seg4_KPI_5_fit$fitted.values))/(seg4$KPI_5[3:20])) * 100))[[1]]
Mean_Absolute_Percent_Difference                      <- colMeans(data.frame((abs(preds - preds1)/preds)*100))[[1]]
}
data                        <- cbind(Time,Strline1,Actual,Original_Forecast,Simulated_Forecast)
data                        <- data.frame(data)
data$Time                   <- as.character(data$Time)
data$Strline1               <- as.numeric(as.character(data$Strline1))
data$Actual                 <- as.numeric(as.character(data$Actual))
data$Original_Forecast      <- as.numeric(as.character(data$Original_Forecast))
data$Simulated_Forecast     <- as.numeric(as.character(data$Simulated_Forecast))
data1                       <- cbind(Mean_Absolute_Percent_Error, Mean_Absolute_Percent_Difference)
data1                       <- data.frame(data1)
data                        <- data.frame(cbind(data,data1))
return(data)
}
# Function for Segment 5
Predicted_Control_Seg5        <- function(KPI,Slide55,Slide56,Slide57,Slide58,Slide59,Slide60,Slide61,Slide62,Slide63,Slide64,Slide65,Slide66,Slide67,Slide68) {
print(KPI)
if (KPI == 'KPI 1 ') {
Actual                    <- c(seg5$KPI_1[3:20],NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
train_seg5_KPI_1            <- seg5[1:20,c("KPI_1","Driver_5","Driver_8","KPI_4")]
train_seg5_KPI_11           <- train_seg5_KPI_1
train_seg5_KPI_11[20,c("Driver_5","Driver_8","KPI_4")]      <- c(Slide55,Slide56,Slide57)
train_seg5_KPI_1$log_Driver_5      <- log(train_seg5_KPI_1$Driver_5)
train_seg5_KPI_11$log_Driver_5     <- log(train_seg5_KPI_11$Driver_5)
train_seg5_KPI_1$log_Driver_8              <- log(train_seg5_KPI_1$Driver_8)
train_seg5_KPI_11$log_Driver_8             <- log(train_seg5_KPI_11$Driver_8)
train_seg5_KPI_1$ma3_KPI_4              <- SMA(train_seg5_KPI_1$KPI_4,3)
train_seg5_KPI_11$ma3_KPI_4             <- SMA(train_seg5_KPI_11$KPI_4,3)
train_seg5_KPI_1                          <- train_seg5_KPI_1[3:20,c("KPI_1","log_Driver_5","log_Driver_8","ma3_KPI_4")]
train_seg5_KPI_11                         <- train_seg5_KPI_11[3:20,c("KPI_1","log_Driver_5","log_Driver_8","ma3_KPI_4")]
seg5_KPI_1_fit              <- lm(KPI_1~.,train_seg5_KPI_1)
preds                     <- predict(seg5_KPI_1_fit,seg5_test)
c1                        <- ts(train_seg5_KPI_11[,"log_Driver_5"],frequency = 12,start=c(2014,6))
c2                        <- ts(train_seg5_KPI_11[,"log_Driver_8"],frequency = 12,start=c(2014,6))
c3                        <- ts(train_seg5_KPI_11[,"ma3_KPI_4"],frequency = 12,start=c(2014,6))
arima_fit1                <- auto.arima(c1,xreg=exogen,D=1)
arima_fit2                <- auto.arima(c2,xreg=exogen,D=1)
arima_fit3                <- auto.arima(c3,xreg=exogen,D=1)
pred1                     <- forecast(arima_fit1,h=12,xreg = c(rep(1,12)))
pred2                     <- forecast(arima_fit2,h=12,xreg = c(rep(1,12)))
pred3                     <- forecast(arima_fit3,h=12,xreg = c(rep(1,12)))
seg5_test1                <- data.frame(pred1$mean,pred2$mean,pred3$mean)
names(seg5_test1)         <- c("log_Driver_5","log_Driver_8","ma3_KPI_4")
seg5_KPI_1_fit1             <- lm(KPI_1~.,train_seg5_KPI_11)
preds1                    <- predict(seg5_KPI_1_fit1,seg5_test1)
Original_Forecast         <- c(seg5_KPI_1_fit$fitted.values,preds)
Simulated_Forecast        <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,Original_Forecast[18],preds1)
Time                      <- c("May14","Jun14","Jul14","Aug14","Sep14","Oct14","Nov14","Dec14","Jan15","Feb15","Mar15","Apr15","May15","Jun15","Jul15","Aug15","Sep15","Oct15","Nov15","Dec15","Jan16","Feb16","Mar16","Apr16","May16","Jun16","Jul16","Aug16","Sep16","Oct16")
Strline1                  <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,(max(Original_Forecast,na.rm=T)*1.5),NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
Mean_Absolute_Percent_Error                      <- colMeans(data.frame(abs(((seg5$KPI_1[3:20])-(seg5_KPI_1_fit$fitted.values))/(seg5$KPI_1[3:20])) * 100))[[1]]
Mean_Absolute_Percent_Difference                      <- colMeans(data.frame((abs(preds - preds1)/preds)*100))[[1]]
} else if (KPI == 'KPI 2 ') {
Actual                    <- c(seg5$KPI_2[3:20],NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
train_seg5_KPI_2            <- seg5[1:20,c("KPI_2","KPI_5","Driver_4")]
train_seg5_KPI_21           <- train_seg5_KPI_2
train_seg5_KPI_21[20,c("KPI_5","Driver_4")]      <- c(Slide58,Slide59)
train_seg5_KPI_2$log_KPI_5              <- log(train_seg5_KPI_2$KPI_5)
train_seg5_KPI_21$log_KPI_5             <- log(train_seg5_KPI_21$KPI_5)
train_seg5_KPI_2$ma3_Driver_4              <- SMA(train_seg5_KPI_2$Driver_4,3)
train_seg5_KPI_21$ma3_Driver_4             <- SMA(train_seg5_KPI_21$Driver_4,3)
train_seg5_KPI_2                          <- train_seg5_KPI_2[3:20,c("KPI_2","log_KPI_5","ma3_Driver_4")]
train_seg5_KPI_21                         <- train_seg5_KPI_21[3:20,c("KPI_2","log_KPI_5","ma3_Driver_4")]
seg5_KPI_2_fit              <- lm(KPI_2~.,train_seg5_KPI_2)
preds                     <- predict(seg5_KPI_2_fit,seg5_test)
c1                        <- ts(train_seg5_KPI_21[,"log_KPI_5"],frequency = 12,start=c(2014,6))
c2                        <- ts(train_seg5_KPI_21[,"ma3_Driver_4"],frequency = 12,start=c(2014,6))
arima_fit1                <- auto.arima(c1,xreg=exogen,D=1)
arima_fit2                <- auto.arima(c2,xreg=exogen,D=1)
pred1                     <- forecast(arima_fit1,h=12,xreg = c(rep(1,12)))
pred2                     <- forecast(arima_fit2,h=12,xreg = c(rep(1,12)))
seg5_test1                <- data.frame(pred1$mean,pred2$mean)
names(seg5_test1)         <- c("log_KPI_5","ma3_Driver_4")
seg5_KPI_2_fit1             <- lm(KPI_2~.,train_seg5_KPI_21)
preds1                    <- predict(seg5_KPI_2_fit1,seg5_test1)
Original_Forecast         <- c(seg5_KPI_2_fit$fitted.values,preds)
Simulated_Forecast        <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,Original_Forecast[18],preds1)
Time                      <- c("May14","Jun14","Jul14","Aug14","Sep14","Oct14","Nov14","Dec14","Jan15","Feb15","Mar15","Apr15","May15","Jun15","Jul15","Aug15","Sep15","Oct15","Nov15","Dec15","Jan16","Feb16","Mar16","Apr16","May16","Jun16","Jul16","Aug16","Sep16","Oct16")
Strline1                  <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,(max(Original_Forecast,na.rm=T)*1.5),NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
Mean_Absolute_Percent_Error                      <- colMeans(data.frame(abs(((seg5$KPI_2[3:20])-(seg5_KPI_2_fit$fitted.values))/(seg5$KPI_2[3:20])) * 100))[[1]]
Mean_Absolute_Percent_Difference                      <- colMeans(data.frame((abs(preds - preds1)/preds)*100))[[1]]
}  else if (KPI == 'KPI 3 ') {
Actual                    <- c(seg5$KPI_3[3:20],NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
train_seg5_KPI_3            <- seg5[1:20,c("KPI_3","Driver_5","Driver_8","Driver_4","KPI_4")]
train_seg5_KPI_31           <- train_seg5_KPI_3
train_seg5_KPI_31[20,c("Driver_5","Driver_8","Driver_4","KPI_4")]      <- c(Slide60,Slide61,Slide62,Slide63)
train_seg5_KPI_3$log_Driver_8       <- log(train_seg5_KPI_3$Driver_8)
train_seg5_KPI_31$log_Driver_8      <- log(train_seg5_KPI_31$Driver_8)
train_seg5_KPI_3$log_Driver_4   <- log(train_seg5_KPI_3$Driver_4)
train_seg5_KPI_31$log_Driver_4  <- log(train_seg5_KPI_31$Driver_4)
train_seg5_KPI_3$ma3_KPI_4        <- SMA(train_seg5_KPI_3$KPI_4,3)
train_seg5_KPI_31$ma3_KPI_4       <- SMA(train_seg5_KPI_31$KPI_4,3)
train_seg5_KPI_3                          <- train_seg5_KPI_3[3:20,c("KPI_3","Driver_5","log_Driver_8","log_Driver_4","ma3_KPI_4")]
train_seg5_KPI_31                         <- train_seg5_KPI_31[3:20,c("KPI_3","Driver_5","log_Driver_8","log_Driver_4","ma3_KPI_4")]
seg5_KPI_3_fit              <- lm(KPI_3~.,train_seg5_KPI_3)
preds                     <- predict(seg5_KPI_3_fit,seg5_test)
c1                        <- ts(train_seg5_KPI_31[,"Driver_5"],frequency = 12,start=c(2014,6))
c2                        <- ts(train_seg5_KPI_31[,"log_Driver_8"],frequency = 12,start=c(2014,6))
c3                        <- ts(train_seg5_KPI_31[,"log_Driver_4"],frequency = 12,start=c(2014,6))
c4                        <- ts(train_seg5_KPI_31[,"ma3_KPI_4"],frequency = 12,start=c(2014,6))
arima_fit1                <- auto.arima(c1,xreg=exogen,D=1)
arima_fit2                <- auto.arima(c2,xreg=exogen,D=1)
arima_fit3                <- auto.arima(c3,xreg=exogen,D=1)
arima_fit4                <- auto.arima(c4,xreg=exogen,D=1)
pred1                     <- forecast(arima_fit1,h=12,xreg = c(rep(1,12)))
pred2                     <- forecast(arima_fit2,h=12,xreg = c(rep(1,12)))
pred3                     <- forecast(arima_fit3,h=12,xreg = c(rep(1,12)))
pred4                     <- forecast(arima_fit4,h=12,xreg = c(rep(1,12)))
seg5_test1                <- data.frame(pred1$mean,pred2$mean,pred3$mean,pred4$mean)
names(seg5_test1)         <- c("Driver_5","log_Driver_8","log_Driver_4","ma3_KPI_4")
seg5_KPI_3_fit1             <- lm(KPI_3~.,train_seg5_KPI_31)
preds1                    <- predict(seg5_KPI_3_fit1,seg5_test1)
Original_Forecast         <- c(seg5_KPI_3_fit$fitted.values,preds)
Simulated_Forecast        <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,Original_Forecast[18],preds1)
Time                      <- c("May14","Jun14","Jul14","Aug14","Sep14","Oct14","Nov14","Dec14","Jan15","Feb15","Mar15","Apr15","May15","Jun15","Jul15","Aug15","Sep15","Oct15","Nov15","Dec15","Jan16","Feb16","Mar16","Apr16","May16","Jun16","Jul16","Aug16","Sep16","Oct16")
Strline1                  <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,(max(Original_Forecast,na.rm=T)*1.5),NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
Mean_Absolute_Percent_Error                      <- colMeans(data.frame(abs(((seg5$KPI_3[3:20])-(seg5_KPI_3_fit$fitted.values))/(seg5$KPI_3[3:20])) * 100))[[1]]
Mean_Absolute_Percent_Difference                      <- colMeans(data.frame((abs(preds - preds1)/preds)*100))[[1]]
} else if (KPI == 'KPI 4 ') {
Actual                    <- c(seg5$KPI_4[3:20],NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
train_seg5_KPI_4           <- seg5[1:20,c("KPI_4","KPI_3","Driver_17","KPI_2")]
train_seg5_KPI_41          <- train_seg5_KPI_4
train_seg5_KPI_41[20,c("KPI_3","Driver_17","KPI_2")]      <- c(Slide64,Slide65/100,Slide66)
train_seg5_KPI_4$log_KPI_3      <- log(train_seg5_KPI_4$KPI_3)
train_seg5_KPI_41$log_KPI_3     <- log(train_seg5_KPI_41$KPI_3)
train_seg5_KPI_4$log_Driver_17      <- log(train_seg5_KPI_4$Driver_17)
train_seg5_KPI_41$log_Driver_17     <- log(train_seg5_KPI_41$Driver_17)
train_seg5_KPI_4$ma3_KPI_2            <- SMA(train_seg5_KPI_4$KPI_2,3)
train_seg5_KPI_41$ma3_KPI_2           <- SMA(train_seg5_KPI_41$KPI_2,3)
train_seg5_KPI_4                           <- train_seg5_KPI_4[3:20,c("KPI_4","log_KPI_3","log_Driver_17","ma3_KPI_2")]
train_seg5_KPI_41                          <- train_seg5_KPI_41[3:20,c("KPI_4","log_KPI_3","log_Driver_17","ma3_KPI_2")]
seg5_KPI_4_fit             <- lm(KPI_4~.,train_seg5_KPI_4)
preds                     <- predict(seg5_KPI_4_fit,seg5_test)
c1                        <- ts(train_seg5_KPI_41[,"log_KPI_3"],frequency = 12,start=c(2014,6))
c2                        <- ts(train_seg5_KPI_41[,"log_Driver_17"],frequency = 12,start=c(2014,6))
c3                        <- ts(train_seg5_KPI_41[,"ma3_KPI_2"],frequency = 12,start=c(2014,6))
arima_fit1                <- auto.arima(c1,xreg=exogen,D=1)
arima_fit2                <- auto.arima(c2,xreg=exogen,D=1)
arima_fit3                <- auto.arima(c3,xreg=exogen,D=1)
pred1                     <- forecast(arima_fit1,h=12,xreg = c(rep(1,12)))
pred2                     <- forecast(arima_fit2,h=12,xreg = c(rep(1,12)))
pred3                     <- forecast(arima_fit3,h=12,xreg = c(rep(1,12)))
seg5_test1                <- data.frame(pred1$mean,pred2$mean,pred3$mean)
names(seg5_test1)         <- c("log_KPI_3","log_Driver_17","ma3_KPI_2")
seg5_KPI_4_fit1            <- lm(KPI_4~.,train_seg5_KPI_41)
preds1                    <- predict(seg5_KPI_4_fit1,seg5_test1)
Original_Forecast         <- c(seg5_KPI_4_fit$fitted.values,preds)
Simulated_Forecast        <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,Original_Forecast[18],preds1)
Time                      <- c("May14","Jun14","Jul14","Aug14","Sep14","Oct14","Nov14","Dec14","Jan15","Feb15","Mar15","Apr15","May15","Jun15","Jul15","Aug15","Sep15","Oct15","Nov15","Dec15","Jan16","Feb16","Mar16","Apr16","May16","Jun16","Jul16","Aug16","Sep16","Oct16")
Strline1                  <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,(max(Original_Forecast,na.rm=T)*1.5),NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
Mean_Absolute_Percent_Error                      <- colMeans(data.frame(abs(((seg5$KPI_4[3:20])-(seg5_KPI_4_fit$fitted.values))/(seg5$KPI_4[3:20])) * 100))[[1]]
Mean_Absolute_Percent_Difference                      <- colMeans(data.frame((abs(preds - preds1)/preds)*100))[[1]]
} else if (KPI == 'KPI 5 ') {
Actual                    <- c(seg5$KPI_5[3:20],NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
train_seg5_KPI_5            <- seg5[1:20,c("KPI_5","Driver_12","Driver_8")]
train_seg5_KPI_51           <- train_seg5_KPI_5
train_seg5_KPI_51[20,c("Driver_12","Driver_8")]      <- c(Slide67/100,Slide68)
train_seg5_KPI_5$log_Driver_12      <- log(train_seg5_KPI_5$Driver_12)
train_seg5_KPI_51$log_Driver_12     <- log(train_seg5_KPI_51$Driver_12)
train_seg5_KPI_5$ma3_Driver_8    <- SMA(train_seg5_KPI_5$Driver_8,3)
train_seg5_KPI_51$ma3_Driver_8   <- SMA(train_seg5_KPI_51$Driver_8,3)
train_seg5_KPI_5                          <- train_seg5_KPI_5[3:20,c("KPI_5","log_Driver_12","ma3_Driver_8")]
train_seg5_KPI_51                         <- train_seg5_KPI_51[3:20,c("KPI_5","log_Driver_12","ma3_Driver_8")]
seg5_KPI_5_fit             <- lm(KPI_5~.,train_seg5_KPI_5)
preds                     <- predict(seg5_KPI_5_fit,seg5_test)
c1                        <- ts(train_seg5_KPI_51[,"log_Driver_12"],frequency = 12,start=c(2014,6))
c2                        <- ts(train_seg5_KPI_51[,"ma3_Driver_8"],frequency = 12,start=c(2014,6))
arima_fit1                <- auto.arima(c1,xreg=exogen,D=1)
arima_fit2                <- auto.arima(c2,xreg=exogen,D=1)
pred1                     <- forecast(arima_fit1,h=12,xreg = c(rep(1,12)))
pred2                     <- forecast(arima_fit2,h=12,xreg = c(rep(1,12)))
seg5_test1                <- data.frame(pred1$mean,pred2$mean)
names(seg5_test1)         <- c("log_Driver_12","ma3_Driver_8")
seg5_KPI_5_fit1            <- lm(KPI_5~.,train_seg5_KPI_51)
preds1                    <- predict(seg5_KPI_5_fit1,seg5_test1)
Original_Forecast         <- c(seg5_KPI_5_fit$fitted.values,preds)
Simulated_Forecast        <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,Original_Forecast[18],preds1)
Time                      <- c("May14","Jun14","Jul14","Aug14","Sep14","Oct14","Nov14","Dec14","Jan15","Feb15","Mar15","Apr15","May15","Jun15","Jul15","Aug15","Sep15","Oct15","Nov15","Dec15","Jan16","Feb16","Mar16","Apr16","May16","Jun16","Jul16","Aug16","Sep16","Oct16")
Strline1                  <- c(NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,(max(Original_Forecast,na.rm=T)*1.5),NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
Mean_Absolute_Percent_Error                      <- colMeans(data.frame(abs(((seg5$KPI_5[3:20])-(seg5_KPI_5_fit$fitted.values))/(seg5$KPI_5[3:20])) * 100))[[1]]
Mean_Absolute_Percent_Difference                      <- colMeans(data.frame((abs(preds - preds1)/preds)*100))[[1]]
}
data                        <- cbind(Time,Strline1,Actual,Original_Forecast,Simulated_Forecast)
data                        <- data.frame(data)
data$Time                   <- as.character(data$Time)
data$Strline1               <- as.numeric(as.character(data$Strline1))
data$Actual                 <- as.numeric(as.character(data$Actual))
data$Original_Forecast      <- as.numeric(as.character(data$Original_Forecast))
data$Simulated_Forecast     <- as.numeric(as.character(data$Simulated_Forecast))
data1                       <- cbind(Mean_Absolute_Percent_Error, Mean_Absolute_Percent_Difference)
data1                       <- data.frame(data1)
data                        <- data.frame(cbind(data,data1))
return(data)
}
#runApp("Predicted_Control_Demo", display.mode = "normal",host="0.0.0.0",port=5050)
runExample("01_hello")      # a histogram
library(shiny)
# Define UI ----
ui <- fluidPage(
titlePanel("Basic widgets"),
fluidRow(
column(3,
h3("Buttons"),
actionButton("action", "Action"),
br(),
br(),
submitButton("Submit")),
column(3,
h3("Single checkbox"),
checkboxInput("checkbox", "Choice A", value = TRUE)),
column(3,
checkboxGroupInput("checkGroup",
h3("Checkbox group"),
choices = list("Choice 1" = 1,
"Choice 2" = 2,
"Choice 3" = 3),
selected = 1)),
column(3,
dateInput("date",
h3("Date input"),
value = "2014-01-01"))
),
fluidRow(
column(3,
dateRangeInput("dates", h3("Date range"))),
column(3,
fileInput("file", h3("File input"))),
column(3,
h3("Help text"),
helpText("Note: help text isn't a true widget,",
"but it provides an easy way to add text to",
"accompany other widgets.")),
column(3,
numericInput("num",
h3("Numeric input"),
value = 1))
),
fluidRow(
column(3,
radioButtons("radio", h3("Radio buttons"),
choices = list("Choice 1" = 1, "Choice 2" = 2,
"Choice 3" = 3),selected = 1)),
column(3,
selectInput("select", h3("Select box"),
choices = list("Choice 1" = 1, "Choice 2" = 2,
"Choice 3" = 3), selected = 1)),
column(3,
sliderInput("slider1", h3("Sliders"),
min = 0, max = 100, value = 50),
sliderInput("slider2", "",
min = 0, max = 100, value = c(25, 75))
),
column(3,
textInput("text", h3("Text input"),
value = "Enter text..."))
)
)
# Define server logic ----
server <- function(input, output) {
}
# Run the app ----
shinyApp(ui = ui, server = server)
runExample("03_reactivity")
runExample("01_hello")      # a histogram
library(shiny)
# This will create a blank UI
# Define UI ----
ui <- fluidPage(
)
# Define server logic ----
server <- function(input, output) {
}
# Run the app ----
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("title panel"),
sidebarLayout(position = "right",
sidebarPanel("sidebar panel"),
mainPanel("main panel")
)
)
shinyApp(ui = ui, server = server)
runApp("Predicted_Control_Demo", display.mode = "normal",host="0.0.0.0",port=5050)
runApp("Predicted_Control_Demo", display.mode = "normal",host="0.0.0.0",port=5050)
